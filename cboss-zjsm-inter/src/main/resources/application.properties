#spring cloud
#Wed Dec 23 09:54:55 CST 2020
spring.application.name=cboss-zjsm-inter
server.port=8889
spring.main.allow-bean-definition-overriding=true
jcf.core.databind-json-type=jackjson
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8

#注册中心地址
spring.cloud.zookeeper.connect-string = 172.18.194.65:2182
#开关，打开会进行服务注册。默认true
spring.cloud.zookeeper.discovery.enabled = true
spring.cloud.zookeeper.discovery.register=true
#将IP注册到注册中心，否则把主机名称注册到注册中心
spring.cloud.zookeeper.discovery.prefer-ip-address = true

#设置目录访问权限，JCF扩展功能
#spring.cloud.zookeeper.digest=user:password

#当前应用所属的租户，如果不分租户则不用配置 JCF扩展功能
#spring.cloud.zookeeper.discovery.metadata.tenant_id = 22
#当前应用所属的机房，如果不分机房则不用配置 JCF扩展功能
#spring.cloud.zookeeper.discovery.metadata.zone = zone_a

#当配置了多机房时需要打开
#ribbon.EnableZoneAffinity = true
#ribbon.EnableZoneExclusivity = true

#当前应用的部署信息和注册信息报错一致。该配置是为了兼容不同分布式架构多机房设计
#jcf.app.deployment.zone = ${spring.cloud.zookeeper.discovery.metadata.zone}
#jcf.app.deployment.tenant-id = ${spring.cloud.zookeeper.discovery.metadata.tenant_id}

#基于容器部署时，且有多机房属性时需要打开。表示把容器宿主机IP注册到注册中心
#为true 时需要配置宿主机IP。主要用于跨k8s机房调用 JCF扩展功能
jcf.cloud.discovery.register-host = false

#宿主机IP，jcf.cloud.discovery.register-host为true 时需要 JCF扩展功能
#jcf.cloud.discovery.host-machine-address=192.168.2.15

#数据库连接

#可配置多数据源，默认数据源为A
jcf.route.defaultLabel=A

#连接池类型 druid连接池
jcf.datasource.A.type=com.alibaba.druid.pool.DruidDataSource
#数据库驱动
jcf.datasource.A.driverClassName=com.sitech.dmdb.Driver
#数据库连接串
jcf.datasource.A.url=jdbc:e-mobile://172.18.231.54:9256/dmdb?useUnicode=true&characterEncoding=gbk&useSSL=true
#用户名
jcf.datasource.A.username=acceptadm
#密码
jcf.datasource.A.password=acceptadm

#连接池名称，用于区分多个连接池，修改为自己的
#jcf.datasource.A.name=ds-a

#初始创建的物理连接池大小，根据请求并发数调整大小
jcf.datasource.A.initialSize=1

#最大连接池大小，根据请求并发数调整大小
jcf.datasource.A.maxActive=50

#最小连接池大小，和initialSize 保持一致
jcf.datasource.A.minIdle=1

#获取连接最大等待时间,单位毫秒
jcf.datasource.A.maxWait=10000

#应用启动时就创建连接池，否则首次调用时获取连接池
jcf.datasource.A.initMethod=init

#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，
#如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
jcf.datasource.A.testWhileIdle=true

#空闲连接等待检测时间，5分钟
jcf.datasource.A.timeBetweenEvictionRunsMillis=300000
#用来校验连接是否有效时执行的SQL
jcf.datasource.A.validationQuery=select 1 from dual
#不要设置
#jcf.datasource.A.testOnBorrow=true

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，内存库配置时不要配置'wall'防火墙，否则URL会被修改（进行了代理）
jcf.datasource.A.filters=stat,log4j

# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
jcf.datasource.A.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=2000

#基础监控配置
# Druid WebStatFilter配置
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.gif,*.png,*.jpg,*.html,*.js,*.css,*.ico,/druid/*

# Druid StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 是否能够重置数据 禁用HTML页面上的“Reset All”功能
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin

# 配置Spring监控
spring.datasource.druid.aop-patterns=com.sitech.cbn.inter.impl.*, com.sitech.cbn.inter.mapper.*

#数据库日志信息
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#xml中去驼峰命名
mybatis.configuration.map-underscore-to-camel-case=true

mybatis.mapper-locations=classpath:mysql-mybatismapper/**/*.xml

logging.level.root=info
logging.file=logs/interApp.log

#分布式序列配置
idss.zookeeper-servers=172.18.194.65:2182
idss.tenant=/biboss-dev
idss.allow-auth=true
idss.zookeeper-session-timeout=50000


#跨中心调用服务
#调用普通HTTP服务
#自选商品获取
jcf.callee.a.inter-class-or-svc-names=sPersonalSearchPgPrcSvc
jcf.callee.a.prefix=http://172.18.194.114:9300/
jcf.callee.a.architecture-type=nomal




